package me.ihainan

import org.scalatest.funsuite.AnyFunSuite
import _root_.java.io.ByteArrayInputStream

class DiffieHellmanGroup14PacketSpec extends AnyFunSuite {

  val serverBytes = Array(0x00, 0x00, 0x03, 0x44, 0x0b, 0x1f, 0x00, 0x00, 0x01, 0x17, 0x00, 0x00,
    0x00, 0x07, 0x73, 0x73, 0x68, 0x2d, 0x72, 0x73, 0x61, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x01,
    0x00, 0x00, 0x01, 0x01, 0x00, 0xd6, 0xa8, 0x0e, 0x1d, 0xf3, 0x0e, 0x2e, 0x6c, 0x56, 0x41, 0x1c,
    0x53, 0x31, 0xf5, 0x5d, 0x61, 0xb0, 0x35, 0x21, 0xcc, 0xeb, 0x75, 0x87, 0xb2, 0xc0, 0x1e, 0x2e,
    0x18, 0xdc, 0x79, 0x2b, 0xdc, 0x63, 0x32, 0x6a, 0x89, 0xf0, 0xd5, 0x8d, 0xea, 0xeb, 0x2e, 0x0f,
    0x97, 0x9f, 0x7f, 0x05, 0x13, 0x11, 0x26, 0x09, 0x52, 0xde, 0x66, 0xf6, 0x01, 0xed, 0xd6, 0x46,
    0x8c, 0xf7, 0xaa, 0x86, 0xe4, 0x4e, 0xf6, 0x38, 0x69, 0x13, 0xbc, 0x6c, 0xa6, 0xfd, 0xdb, 0xd7,
    0x78, 0x78, 0x18, 0x7f, 0x83, 0x42, 0x80, 0x46, 0x67, 0x50, 0x1e, 0xea, 0xc1, 0x1b, 0x8e, 0xf8,
    0xd9, 0xb5, 0xd9, 0x84, 0xfa, 0xf0, 0xb4, 0x7f, 0xa5, 0x75, 0x9e, 0x80, 0x39, 0xf0, 0x0d, 0xf7,
    0x2c, 0x77, 0xbc, 0x7e, 0xc1, 0x35, 0x90, 0x90, 0x1d, 0x86, 0x56, 0x78, 0xb1, 0xb8, 0x34, 0xad,
    0x42, 0x49, 0x4b, 0x13, 0x63, 0x23, 0xc1, 0x76, 0x01, 0x1c, 0x0e, 0xb0, 0x7c, 0x69, 0xb9, 0xdb,
    0x51, 0xf0, 0xf1, 0x03, 0xb9, 0xb2, 0xec, 0x56, 0xc2, 0x04, 0x36, 0x98, 0xa0, 0xd6, 0x7d, 0xab,
    0xdc, 0x6f, 0xbd, 0xc1, 0x4d, 0xc9, 0x0e, 0x88, 0x95, 0x99, 0xa7, 0x19, 0xc1, 0x4d, 0x78, 0x15,
    0x31, 0xaa, 0x63, 0xc1, 0x67, 0x86, 0xe1, 0xcb, 0x59, 0xfd, 0x35, 0x2f, 0x15, 0xed, 0x76, 0xc2,
    0x48, 0xfc, 0x81, 0xd9, 0xc2, 0xe4, 0x97, 0x01, 0x8b, 0x5b, 0x69, 0xc2, 0xa2, 0xcd, 0x4a, 0xae,
    0xcf, 0xfc, 0x4a, 0x61, 0xa8, 0x9d, 0x4d, 0x7c, 0x80, 0xcc, 0x1e, 0xca, 0x6b, 0x61, 0x12, 0x15,
    0xf9, 0x73, 0xab, 0xd8, 0xfe, 0xf4, 0xf9, 0xdd, 0xb8, 0xfd, 0x3d, 0x5f, 0xda, 0x41, 0x8e, 0x9c,
    0x22, 0x03, 0xdc, 0x09, 0x17, 0x86, 0x58, 0x20, 0x95, 0xc8, 0x1a, 0xb8, 0x95, 0x92, 0x19, 0x82,
    0x7c, 0xbf, 0x7b, 0xe5, 0xdd, 0x00, 0x00, 0x01, 0x00, 0x18, 0x89, 0xbd, 0xf7, 0xe7, 0x8f, 0x95,
    0x95, 0xb0, 0x3f, 0x75, 0xa3, 0x8b, 0x04, 0x34, 0x9e, 0x94, 0xb2, 0xdf, 0x75, 0x7a, 0x58, 0x56,
    0xba, 0xdc, 0x8a, 0x37, 0x8f, 0xd3, 0x0b, 0x03, 0xf8, 0x8f, 0xd5, 0xee, 0xc7, 0x0e, 0x78, 0x2d,
    0xad, 0xc9, 0x5f, 0xec, 0x9b, 0x91, 0x52, 0xd7, 0xe2, 0xf9, 0x0f, 0xa8, 0xf5, 0x24, 0xe1, 0xdb,
    0x8d, 0x6c, 0xf5, 0xbb, 0x6d, 0xed, 0x4e, 0x1f, 0xa0, 0xed, 0x69, 0x34, 0xd9, 0x69, 0xb2, 0x3c,
    0x41, 0x23, 0xb7, 0x20, 0xef, 0x5e, 0xe7, 0x50, 0x1b, 0x5b, 0x12, 0x25, 0x78, 0xf5, 0x1d, 0x12,
    0xd6, 0x44, 0x3d, 0xd8, 0xd3, 0x83, 0xc1, 0x46, 0x3c, 0xee, 0x2c, 0x59, 0x6a, 0x78, 0x62, 0x49,
    0xdb, 0xe7, 0xcd, 0xec, 0x73, 0x0c, 0x95, 0xfa, 0x3e, 0xe1, 0x9e, 0xe0, 0x1a, 0xec, 0xdb, 0x2e,
    0x21, 0x02, 0xae, 0xc5, 0x1f, 0x1e, 0xc8, 0x11, 0xbf, 0xe7, 0x97, 0x91, 0xea, 0x2d, 0xd2, 0x83,
    0x0c, 0x6b, 0x5a, 0x46, 0xfd, 0x92, 0xd0, 0xa4, 0x31, 0x51, 0x07, 0x7c, 0x6a, 0xf9, 0x95, 0xad,
    0xbf, 0xe7, 0x02, 0x5e, 0x3b, 0x12, 0xec, 0xa1, 0x6f, 0x10, 0x1c, 0xf4, 0xe6, 0xba, 0xae, 0xf2,
    0xfe, 0x9d, 0x43, 0xe7, 0xc5, 0xe3, 0x05, 0xb9, 0x43, 0x3c, 0x11, 0xbd, 0xd7, 0xc7, 0x43, 0x6f,
    0x7c, 0xb9, 0x34, 0x9d, 0x5f, 0x4b, 0x08, 0xab, 0xdb, 0x47, 0xb1, 0xdd, 0xcf, 0x7e, 0x51, 0xdd,
    0x52, 0x9a, 0x82, 0xe4, 0x67, 0xe8, 0x68, 0x75, 0x46, 0x34, 0x3b, 0xac, 0x6b, 0x05, 0x03, 0x22,
    0x18, 0x0d, 0xda, 0xc5, 0xed, 0x1e, 0x4f, 0xbe, 0x62, 0x22, 0x2a, 0x1d, 0xd8, 0x1d, 0x8f, 0x2f,
    0x4c, 0xc5, 0x10, 0x37, 0xe0, 0x2e, 0x8e, 0x00, 0xa2, 0xd7, 0x60, 0x38, 0x6e, 0x2d, 0x86, 0xeb,
    0x87, 0xea, 0x52, 0xa5, 0xf4, 0xab, 0x28, 0xe6, 0x59, 0x00, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00,
    0x0c, 0x72, 0x73, 0x61, 0x2d, 0x73, 0x68, 0x61, 0x32, 0x2d, 0x35, 0x31, 0x32, 0x00, 0x00, 0x01,
    0x00, 0x7e, 0xa2, 0xf9, 0x34, 0xa3, 0xf5, 0xf6, 0x21, 0xf8, 0xc9, 0x99, 0x0e, 0xa9, 0xd8, 0xd0,
    0xc2, 0x4f, 0x76, 0x25, 0xcb, 0x5e, 0xc6, 0x7a, 0x65, 0xb3, 0xa3, 0x92, 0x6f, 0x6f, 0xcc, 0xa5,
    0x9a, 0x63, 0x78, 0x7c, 0x6e, 0xc6, 0x1b, 0xc4, 0x43, 0x99, 0x69, 0x99, 0x06, 0xf4, 0xf8, 0xa1,
    0x5b, 0x3d, 0x83, 0xfa, 0xc2, 0x3c, 0x75, 0x01, 0x59, 0x43, 0x5a, 0xdb, 0x1c, 0x18, 0x77, 0xf4,
    0x1c, 0x34, 0x9b, 0x7d, 0xf0, 0x61, 0x2a, 0x12, 0x83, 0x3b, 0xa9, 0xbb, 0x3c, 0x38, 0x78, 0xc0,
    0x9e, 0x5a, 0x9e, 0x4a, 0x3a, 0x1e, 0x9f, 0x2a, 0x42, 0x46, 0x9c, 0x92, 0x89, 0x0b, 0x1b, 0xd7,
    0xeb, 0x77, 0x99, 0xa5, 0xa0, 0x28, 0x64, 0x2f, 0xf9, 0x7e, 0x84, 0xbc, 0x8e, 0x2b, 0x5d, 0xd0,
    0x80, 0x16, 0xa5, 0x74, 0xc6, 0x81, 0x8e, 0x99, 0x37, 0x12, 0x42, 0xa8, 0x82, 0x6e, 0x3b, 0x35,
    0xed, 0xf6, 0x95, 0x76, 0x2a, 0xe7, 0x54, 0x98, 0xd5, 0x75, 0x93, 0xd8, 0x55, 0x28, 0x42, 0x8d,
    0x09, 0x42, 0xa7, 0xbd, 0x99, 0x8e, 0x6c, 0xcd, 0x94, 0xf3, 0x11, 0x45, 0xe9, 0x0f, 0x52, 0xcf,
    0xb9, 0x32, 0xbb, 0x1e, 0x2f, 0x1a, 0x19, 0x62, 0x04, 0x27, 0xb6, 0x5b, 0xf7, 0xa6, 0x98, 0xa0,
    0x11, 0xb1, 0xa2, 0x32, 0xad, 0xec, 0x61, 0xe2, 0xcf, 0x4f, 0xb3, 0xe6, 0x5e, 0x46, 0xc5, 0x3a,
    0x5a, 0x62, 0xcb, 0x35, 0xe5, 0xbc, 0xd9, 0x02, 0x2c, 0x03, 0xa9, 0x98, 0xf8, 0xe4, 0x1f, 0xf1,
    0xeb, 0xd1, 0x11, 0xbb, 0x1b, 0xbd, 0x0a, 0xe7, 0x9f, 0x08, 0x81, 0x2c, 0xca, 0xb7, 0x5f, 0xe7,
    0x67, 0xe3, 0x44, 0x56, 0xc4, 0xdb, 0x5b, 0xb3, 0x63, 0x97, 0xb7, 0xf9, 0xe7, 0x92, 0x1e, 0xd7,
    0x6c, 0x6e, 0x9c, 0x4e, 0x76, 0xd3, 0xa6, 0x64, 0x37, 0x08, 0x17, 0x47, 0x8a, 0x36, 0xcf, 0xa2,
    0xc8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00).map(_.toByte)

  test("generateDHInitPacket") {
    DiffieHellmanGroup14Packet.generateDHInitPacket()
  }

  test("parseServerPublicKey") {
    val in = new ByteArrayInputStream(serverBytes)
    DiffieHellmanGroup14Packet.parseServerPublicKey(in, "openssh", "openssh")
  }
}
